{"version":3,"file":"pages/lesson/study/index.js","sources":["webpack:///._src_pages_lesson_study_index.jsx","webpack:///._src_components_Hunan_Lesson_Study_index.jsx","webpack:///._src_components_Hunan_Lesson_Study_index.module.less","webpack:///._src_components_TryVideo_index.js","webpack:///._src_components_TryVideo_index.module.less","webpack:///./src/pages/lesson/study/index.jsx?07c3","webpack:///._src_pages_lesson_study_index.module.less","webpack:///._src_pages_lesson_study_studyStore.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { View, Button, Text, Input } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport styles from './index.module.less'\nimport Hunan from '@/components/Hunan/Lesson/Study'\nimport { toJS } from 'mobx'\nimport { useObserver } from 'mobx-react'\nimport studyStore from './studyStore'\n\nconst Study = () => {\n  useEffect(() => {\n    let { cleanAll } = toJS(studyStore)\n    cleanAll = cleanAll || new Function()\n    const cleanUp = () => {\n      cleanAll()\n    }\n    return cleanUp\n  }, [])\n  return useObserver(() => {\n    return (\n      <View className={styles.page}>\n        <Hunan {...toJS(studyStore)} />\n      </View>\n    )\n  })\n}\n\nexport default Study\n","import React, { useEffect, useMemo } from 'react'\nimport { View } from '@tarojs/components'\nimport { useRouter, useShareAppMessage, useShareTimeline } from '@tarojs/taro'\nimport { useObserver } from 'mobx-react'\nimport TryVideo from '@/components/TryVideo'\nimport Taro from '@tarojs/taro'\n\nimport styles from './index.module.less'\nimport useStore from '@/util/useStore'\nimport EmptyList from '../../EmptyList'\nimport getHMS from '@/util/getHMS'\nimport getCurrentUrl from '@/util/getCurrentUrl'\n\nconst Study = props => {\n  const router = useRouter()\n  let { params } = router || {}\n  let { cid, unitid } = params || {}\n  cid = cid || null\n  unitid = unitid || null\n\n  const { store } = useStore()\n  let { globalStore } = store || {}\n  let { defaultBannerImage, defaultLogo, confirm_time, userData } = globalStore || {}\n\n  userData = userData || {}\n  let { id, name, info } = userData || {}\n  let { idcard } = info || {}\n\n  confirm_time = Number(confirm_time || 0)\n\n  let {\n    setUid,\n    setConfirmTime,\n    getLessonDetail,\n    getLessonChapters,\n    toggleUnit,\n    toggleFollow,\n    cleanAll,\n  } = props\n  setUid = setUid || new Function()\n  setConfirmTime = setConfirmTime || new Function()\n  getLessonDetail = getLessonDetail || new Function()\n  getLessonChapters = getLessonChapters || new Function()\n  toggleUnit = toggleUnit || new Function()\n  toggleFollow = toggleFollow || new Function()\n  cleanAll = cleanAll || new Function()\n\n  let shareObj = {}\n\n  const doWatchMovie = e => {\n    e.stopPropagation()\n    Taro.showToast({\n      title: '您目前只能观看试看视频',\n      icon: 'none',\n      duration: 3000,\n    })\n  }\n\n  useEffect(() => {\n    setUid(id)\n    setConfirmTime(confirm_time)\n    getLessonDetail(cid)\n    getLessonChapters(cid, unitid)\n    return () => {\n      cleanAll()\n    }\n  }, [])\n\n  useShareAppMessage(res => {\n    return shareObj\n  })\n  useShareTimeline(res => {\n    return shareObj\n  })\n\n  return useObserver(() => {\n    let {\n      unitid,\n      uid,\n      info,\n      listData,\n      trailerTime,\n      videoParams,\n      videoDuration,\n      testData,\n      toggleSelTest,\n      goToTest,\n      sel_test,\n      test_id,\n    } = props\n    testData = testData || {}\n    toggleSelTest = toggleSelTest || new Function()\n    goToTest = goToTest || new Function()\n    sel_test = sel_test || false\n    listData = listData || []\n    trailerTime = Number(trailerTime || 0)\n    let { title, image, content, source, is_follow } = info || {}\n\n    image = image || defaultBannerImage\n    content = content || {}\n    content.content = content.content || ''\n    content.content = content.content\n      .replace(/<p([\\s\\w\"=\\/\\.:;]+)((?:(style=\"[^\"]+\")))/gi, '<p')\n      .replace(/<p([\\s\\w\"=\\/\\.:;]+)((?:(class=\"[^\"]+\")))/gi, '<p')\n      .replace(/<p>/gi, '<p style=\"textIndent:60px;marginBottom:20px\">')\n      .replace(/<img([\\s\\w\"-=\\/\\.:;]+)((?:(height=\"[^\"]+\")))/gi, '<img$1')\n      .replace(/<img([\\s\\w\"-=\\/\\.:;]+)((?:(width=\"[^\"]+\")))/gi, '<img$1')\n      .replace(/<img([\\s\\w\"-=\\/\\.:;]+)((?:(style=\"[^\"]+\")))/gi, '<img$1')\n      .replace(/<img([\\s\\w\"-=\\/\\.:;]+)((?:(alt=\"[^\"]+\")))/gi, '<img$1')\n      .replace(/<img/gi, '<img width=\"100%\" height=\"auto\" style=\"margin-bottom:10px;display:block\"')\n\n    source = source || {}\n    source.avatar = source.avatar || defaultLogo\n    is_follow = is_follow || false\n\n    shareObj = {\n      title,\n      path: getCurrentUrl(),\n      imageUrl: image,\n    }\n    const MemTryVideo = useMemo(\n      () => (\n        <TryVideo\n          name={name}\n          idcard={idcard}\n          uid={uid}\n          videoDuration={videoDuration}\n          trailerTime={trailerTime}\n          videoParams={videoParams}\n        />\n      ),\n      [videoParams.src]\n    )\n\n    return (\n      <View className={styles.page}>\n        <View className={styles.video_content}>{MemTryVideo}</View>\n\n        <View className={styles.info_content}>\n          <View className={styles.info}>\n            <View className={styles.name}>{title}</View>\n          </View>\n\n          <View className={styles.fav} onClick={toggleFollow}>\n            <View className={[is_follow ? styles.signed : styles.sign].join(' ')} />\n            <View className={styles.text}>收藏</View>\n          </View>\n        </View>\n        <View className={styles.gray_con} />\n        <View className={styles.tabs}>学习目录</View>\n        {/*学习目录*/}\n        <View className={styles.list}>\n          {listData.length === 0 && Object.keys(testData).length === 0 ? <EmptyList /> : null}\n          {listData.map((item, listIndex) => {\n            let { id, title, sections, units, active } = item\n            sections = sections || []\n            units = units || []\n            return (\n              <View\n                key={`chapter_${id}`}\n                className={[styles.chapter, active ? styles.active : ''].join(' ')}\n                onClick={e => {\n                  e.stopPropagation()\n                  toggleUnit(item)\n                }}\n              >\n                <View className={styles.chapter_info}>\n                  <View className={styles.chapter_sign} />\n                  <View className={styles.chapter_tit}>{title}</View>\n                </View>\n                {sections.map(sectionItem => {\n                  let { title, units } = sectionItem || {}\n                  units = units || []\n                  return (\n                    <View key={`section_unit_${sectionItem.id}`}>\n                      <View className={styles.section}>{title}</View>\n                      {units.map(sectionUnit => {\n                        let { type, typeName, title, total_time, total_question, isFirstMovie } =\n                          sectionUnit || {}\n                        type = Number(type || 0)\n                        typeName = typeName || {}\n                        return (\n                          <View\n                            className={[\n                              styles.section_unit,\n                              Number(sectionUnit.id || 0) === Number(unitid || 0)\n                                ? styles.active\n                                : '',\n                            ].join(' ')}\n                            key={`section_unit_${sectionUnit.id}`}\n                            onClick={e => {\n                              doWatchMovie(e)\n                            }}\n                          >\n                            <View className={styles.section_unit_info_content}>\n                              <View className={styles.section_unit_sign}>{typeName.name}</View>\n                              <View className={styles.section_unit_info}>\n                                <View className={styles.section_unit_info_left}>\n                                  <View className={styles.section_unit_info_left_title}>\n                                    <View className={styles.title}>{title}</View>\n                                    {isFirstMovie ? (\n                                      <View className={styles.title_sign}>试看</View>\n                                    ) : null}\n                                  </View>\n                                  {type === 1 ? (\n                                    <View className={styles.section_unit_info_left_info}>\n                                      <View className={styles.unit_time} />\n                                      <View className={styles.unit_time_str}>\n                                        {getHMS(total_time)}\n                                      </View>\n                                    </View>\n                                  ) : null}\n                                  {type === 2 ? (\n                                    <View className={styles.section_unit_info_left_info}>\n                                      <View className={styles.unit_practise} />\n                                      <View className={styles.unit_time_str}>\n                                        {total_question}题\n                                      </View>\n                                    </View>\n                                  ) : null}\n                                </View>\n                                {!isFirstMovie ? (\n                                  <View className={styles.section_unit_info_right} />\n                                ) : null}\n                              </View>\n                            </View>\n                          </View>\n                        )\n                      })}\n                    </View>\n                  )\n                })}\n\n                {units.map(chapterUnit => {\n                  let { type, typeName, title, total_time, total_question, isFirstMovie } =\n                    chapterUnit || {}\n                  type = Number(type || 0)\n                  typeName = typeName || {}\n                  return (\n                    <View\n                      key={`chapter_unit_${chapterUnit.id}`}\n                      className={[\n                        styles.section_unit,\n                        Number(chapterUnit.id || 0) === Number(unitid || 0) ? styles.active : '',\n                      ].join(' ')}\n                      onClick={e => {\n                        doWatchMovie(e)\n                      }}\n                    >\n                      <View className={styles.section_unit_info_content}>\n                        <View className={styles.section_unit_sign}>{typeName.name}</View>\n                        <View className={styles.section_unit_info}>\n                          <View className={styles.section_unit_info_left}>\n                            <View className={styles.section_unit_info_left_title}>\n                              <View className={styles.title}>{title}</View>\n                              {isFirstMovie ? (\n                                <View className={styles.title_sign}>试看</View>\n                              ) : null}\n                            </View>\n                            {type === 1 ? (\n                              <View className={styles.section_unit_info_left_info}>\n                                <View className={styles.unit_time} />\n                                <View className={styles.unit_time_str}>{getHMS(total_time)}</View>\n                              </View>\n                            ) : null}\n                            {type === 2 ? (\n                              <View className={styles.section_unit_info_left_info}>\n                                <View className={styles.unit_practise} />\n                                <View className={styles.unit_time_str}>{total_question}题</View>\n                              </View>\n                            ) : null}\n                          </View>\n                          {!isFirstMovie ? (\n                            <View className={styles.section_unit_info_right} />\n                          ) : null}\n                        </View>\n                      </View>\n                    </View>\n                  )\n                })}\n              </View>\n            )\n          })}\n\n          {Object.keys(testData).length !== 0 ? (\n            <View\n              className={[styles.chapter, sel_test ? styles.active : ''].join(' ')}\n              onClick={e => {\n                e.stopPropagation()\n                toggleSelTest()\n              }}\n            >\n              <View className={styles.chapter_info}>\n                <View className={styles.chapter_sign} />\n                <View className={styles.chapter_tit}>课后考试</View>\n              </View>\n\n              <View\n                className={[styles.section_unit, test_id ? styles.active : ''].join(' ')}\n                onClick={e => {\n                  e.stopPropagation()\n                  goToTest()\n                }}\n              >\n                <View className={styles.section_unit_info_content}>\n                  <View className={styles.section_unit_sign}>考试</View>\n                  <View className={styles.section_unit_info}>\n                    <View className={styles.section_unit_info_left}>\n                      <View className={styles.section_unit_info_left_title}>\n                        <View\n                          className={[\n                            styles.title,\n                            Number(test_id || 0) !== 0 ? styles.active : '',\n                          ].join(' ')}\n                        >\n                          {testData.title}\n                        </View>\n                      </View>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    )\n  })\n}\n\nexport default Study\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video_cover\":\"index-module__video_cover___2d7kE\",\"video_try\":\"index-module__video_try___20ZTf\",\"page\":\"index-module__page___1Qfk4\",\"video_content\":\"index-module__video_content___1gyo9\",\"video\":\"index-module__video___1nadO\",\"info_content\":\"index-module__info_content___1durf\",\"info\":\"index-module__info___2fwjR\",\"name\":\"index-module__name___2XRA4\",\"cost\":\"index-module__cost___WeRn9\",\"free\":\"index-module__free___vbv6I\",\"money\":\"index-module__money___1zyRg\",\"fav\":\"index-module__fav___3pcaW\",\"sign\":\"index-module__sign___2K23U\",\"signed\":\"index-module__signed___16uW7\",\"text\":\"index-module__text___2nUDh\",\"gray_con\":\"index-module__gray_con___1yQEp\",\"tabs\":\"index-module__tabs___3n8iU\",\"list\":\"index-module__list___Wwfac\",\"chapter\":\"index-module__chapter___3ERvW\",\"chapter_info\":\"index-module__chapter_info___ycS98\",\"chapter_sign\":\"index-module__chapter_sign___1Lvcm\",\"chapter_tit\":\"index-module__chapter_tit___3RMzL\",\"active\":\"index-module__active___36nKh\",\"section\":\"index-module__section___1Wj9E\",\"section_unit\":\"index-module__section_unit___1QkxN\",\"section_unit_info_content\":\"index-module__section_unit_info_content___n0YzT\",\"section_unit_sign\":\"index-module__section_unit_sign___2XZDw\",\"section_unit_info\":\"index-module__section_unit_info___13t__\",\"section_unit_info_left\":\"index-module__section_unit_info_left___2eYDI\",\"section_unit_info_left_title\":\"index-module__section_unit_info_left_title___BihJl\",\"title\":\"index-module__title___21Z9f\",\"title_sign\":\"index-module__title_sign___3geSM\",\"section_unit_info_left_info\":\"index-module__section_unit_info_left_info___3CNIY\",\"unit_time\":\"index-module__unit_time___eGZkg\",\"unit_practise\":\"index-module__unit_practise___1rDuk\",\"unit_time_str\":\"index-module__unit_time_str___2n3h_\",\"unit_split\":\"index-module__unit_split___1cIrM\",\"unit_status_learned\":\"index-module__unit_status_learned___2FkLu\",\"unit_status_unlearn\":\"index-module__unit_status_unlearn___2V-RT\",\"unit_status_learning\":\"index-module__unit_status_learning___Mcxwv\",\"unit_file_type\":\"index-module__unit_file_type___5dEuA\",\"section_unit_info_right\":\"index-module__section_unit_info_right___3aF9o\",\"unit\":\"index-module__unit___9hVM5\",\"unit_info\":\"index-module__unit_info___u8U29\",\"unit_sign\":\"index-module__unit_sign___USIXq\",\"unit_tit\":\"index-module__unit_tit___3h8fG\",\"list_item\":\"index-module__list_item___cAWUX\",\"item_content\":\"index-module__item_content___OzGW1\",\"item_name_con\":\"index-module__item_name_con___mjGiq\",\"item_name\":\"index-module__item_name___3BM-r\",\"item_try\":\"index-module__item_try___1icVu\",\"item_info\":\"index-module__item_info___1Ufwc\",\"time\":\"index-module__time___1SBsk\",\"time_str\":\"index-module__time_str___5cQ_Q\",\"split\":\"index-module__split___2QAgH\",\"unlearn_sign\":\"index-module__unlearn_sign___2nlsr\",\"learned_sign\":\"index-module__learned_sign___2tm03\",\"learn_status\":\"index-module__learn_status___3pHCn\",\"canvas\":\"index-module__canvas___XjmMh\",\"hasLock\":\"index-module__hasLock___3ifw3\",\"item_lock\":\"index-module__item_lock___1eZLN\",\"detail\":\"index-module__detail___17bLh\",\"des_title\":\"index-module__des_title___3-HGD\",\"rich_content\":\"index-module__rich_content___1NVpn\",\"from\":\"index-module__from___nHzZJ\",\"icon\":\"index-module__icon___3Cz7f\",\"txt\":\"index-module__txt___1uOY_\",\"dialog\":\"index-module__dialog___35MCQ\",\"dialog_box\":\"index-module__dialog_box___1kKxc\",\"dialog_text\":\"index-module__dialog_text___3Gna-\",\"dialog_btn\":\"index-module__dialog_btn___3AAww\",\"warring_box\":\"index-module__warring_box___2vcby\",\"warring_img\":\"index-module__warring_img___3eDJA\",\"warring_tit\":\"index-module__warring_tit___3Q27Z\",\"warring_des\":\"index-module__warring_des___1_Vqd\",\"warring_p_tit\":\"index-module__warring_p_tit___2tZze\",\"warring_p_l\":\"index-module__warring_p_l___1yfEc\",\"warring_i\":\"index-module__warring_i___19yzq\",\"warring_p\":\"index-module__warring_p___1ELsh\",\"warring_btn\":\"index-module__warring_btn___Guhg8\"};","/**\n * Created by feeling on 2020/9/16.\n * Theme：播放器组件\n */\nimport React, { useEffect, useState } from 'react'\nimport Taro from '@tarojs/taro'\nimport { View, Text, Video, Slider } from '@tarojs/components'\nimport styles from './index.module.less'\nimport store from '@/pages/lesson/study/studyStore'\n\nlet tryVideoContext = null\nlet controlShowEvent = [] //控制条延时显示事件\nlet tempCurrentTime = 0 //当前播放器播放到的时间（未上传）\nlet onChangeQuality = false //是否正在切换清晰度\n\nconst timeFormat = time => {\n  time = Number(time || 0)\n  let newTime, hour, minite, seconds\n  hour = parseInt(time / 3600) < 10 ? '0' + parseInt(time / 3600) : parseInt(time / 3600)\n  minite =\n    parseInt((time % 3600) / 60) < 10\n      ? '0' + parseInt((time % 3600) / 60)\n      : parseInt((time % 3600) / 60)\n  seconds = parseInt(time % 60)\n  seconds = seconds < 10 ? '0' + seconds : seconds\n  newTime = {\n    hour,\n    minite,\n    seconds,\n  }\n  return newTime\n}\n\nexport default function (props) {\n  let { trailerTime, videoParams } = props || {}\n  videoParams = videoParams || {}\n\n  //控制加载动画显隐\n  const [videoLoading, setVideoLoading] = useState(false)\n  //控制是否展示试看模块\n  const [showTry, setShowTry] = useState(false)\n  //是否处于全屏模式\n  const [isFullScreen, setIsFullScreen] = useState(false)\n  //是否显示播放器控制器\n  const [showControl, setShowControl] = useState(true)\n  //是否显示清晰度选择\n  const [showQuality, setShowQuality] = useState(false)\n  //视频总长度\n  const [duration, setDuration] = useState(0)\n  //是否正在播放\n  const [playing, setPlaying] = useState(true)\n  //已播放时长\n  const [timePlay, setTimePlay] = useState({})\n  //视频总时长\n  const [timeAll, setTimeAll] = useState({})\n  //视频总时长\n  const [timeBarWidth, setTimeBarWidth] = useState({})\n  //当前视频清晰度名称\n  const [qualityName, setQualityName] = useState('')\n\n  let { updateVideoParams } = store\n\n  updateVideoParams = updateVideoParams || new Function()\n\n  /**src数据（清晰度更换）改变时触发*/\n  useEffect(() => {\n    tryVideoContext = Taro.createVideoContext('tryVideo', this)\n    let { src, videoUrls } = videoParams || {}\n    videoUrls = videoUrls || []\n    /**设置清晰度*/\n    let qualityArr = videoUrls.filter(temp => temp.url === src)\n    if (qualityArr.length > 0) {\n      let tempQualityName = getQualityName(qualityArr[0].clarity)\n      setQualityName(tempQualityName)\n    }\n\n    setDuration(props.videoDuration)\n\n    if (!videoLoading) {\n      Taro.nextTick(() => {\n        setVideoLoading(true)\n      })\n    }\n  }, [videoParams.src])\n\n  /**播放触发*/\n  const bindPlay = e => {\n    setPlaying(true)\n  }\n\n  /**暂停触发*/\n  const bindPause = e => {\n    setPlaying(false)\n  }\n\n  /**视频结束触发*/\n  const bindEnded = e => {\n    tryVideoContext.stop()\n    if (!showTry) {\n      setShowTry(true)\n      setPlaying(false)\n      setShowQuality(false)\n      setShowControl(false)\n    }\n  }\n\n  /**视频重新播放触发*/\n  const bindReplay = e => {\n    setPlaying(true)\n    setShowTry(false)\n    if (tryVideoContext) {\n      Taro.nextTick(() => {\n        tryVideoContext.seek(0)\n        tryVideoContext.play()\n      })\n    }\n  }\n\n  /**视频出现缓冲时触发*/\n  const bindWaiting = e => {}\n\n  /**播放中触发*/\n  const bindtimeupdate = e => {\n    /**\n     * 记录播放进度时间\n     * 比较进度时间与试看时间 比较成功 显示试看遮罩层\n     * */\n    let { detail } = e || {}\n    const { currentTime } = detail || {}\n    tempCurrentTime = currentTime\n    /**试看时间结束执行**/\n    if (Number(currentTime || 0) > Number(trailerTime || 0) && Number(trailerTime || 0) !== 0) {\n      if (!showTry) {\n        setShowTry(true)\n        setPlaying(false)\n        setShowQuality(false)\n        setShowControl(false)\n        Taro.nextTick(() => {\n          if (tryVideoContext) {\n            tryVideoContext.pause()\n            Taro.nextTick(() => {\n              tryVideoContext.seek(Number(trailerTime || 0))\n            })\n          }\n        })\n      }\n    }\n\n    setTimeBarWidth(Math.ceil((currentTime / duration) * 100))\n    setTimePlay(timeFormat(currentTime))\n    setTimeAll(timeFormat(duration))\n  }\n\n  /**全屏或者退出全屏触发*/\n  const bindfullscreenchange = e => {\n    if (isFullScreen) {\n      setIsFullScreen(false)\n    } else {\n      setIsFullScreen(true)\n    }\n  }\n\n  /**退出全屏触发*/\n  const bindExitFullScreen = e => {\n    setShowQuality(false)\n    if (tryVideoContext) {\n      tryVideoContext.exitFullScreen()\n    }\n  }\n\n  /**点击组件触发*/\n  const controlToggle = e => {\n    if (showTry) return\n    controlShowEvent.map(item => {\n      clearTimeout(item)\n    })\n    controlShowEvent = []\n    setShowControl(true)\n    Taro.nextTick(() => {\n      let temp = setTimeout(() => {\n        setShowControl(false)\n        setShowQuality(false)\n      }, 4000)\n      controlShowEvent.push(temp)\n    })\n  }\n\n  /**视频元数据加载完成时触发*/\n  const bindLoadedmetadata = e => {\n    if (!onChangeQuality && Number(videoParams.progress || 0) === 1) {\n      tryVideoContext.play()\n      setVideoLoading(false)\n      return\n    }\n    setTimeout(() => {\n      if (!tryVideoContext) return\n      setVideoLoading(false)\n    }, 3000)\n  }\n\n  /**视频播放进度改变时触发*/\n  const bindProgressChange = e => {\n    if (videoLoading) {\n      Taro.nextTick(() => {\n        setTimeout(() => {\n          setVideoLoading(false)\n        }, 4000)\n      })\n    }\n  }\n\n  /**视频出错触发*/\n  const bindVideoErrorCallback = e => {\n    let { detail } = e || {}\n    let { errMsg } = detail\n    Taro.showToast({\n      title: errMsg.toString(),\n      icon: 'none',\n      duration: 4000,\n    })\n    Taro.nextTick(() => {\n      setVideoLoading(false)\n    })\n  }\n\n  /**进度条拖动触发*/\n  const sliderChanging = e => {}\n\n  /**进度条拖动结束触发*/\n  const sliderChangeEnd = e => {}\n\n  /**播放和暂停*/\n  const togglePlay = e => {\n    e.stopPropagation()\n    controlToggle()\n    if (playing) {\n      setPlaying(false)\n      Taro.nextTick(() => {\n        tryVideoContext.pause()\n        setShowQuality(false)\n      })\n    } else {\n      setPlaying(true)\n      Taro.nextTick(() => {\n        tryVideoContext.play()\n        setShowQuality(false)\n      })\n    }\n  }\n\n  /**切换视频清晰度*/\n  const toggleQuality = e => {\n    if (showQuality) {\n      setShowQuality(false)\n    } else {\n      setShowQuality(true)\n    }\n  }\n\n  /**切换全屏*/\n  const toggleFull = e => {\n    if (!tryVideoContext) {\n      tryVideoContext = Taro.createVideoContext('tryVideo', this)\n    }\n    if (isFullScreen) {\n      if (tryVideoContext) {\n        tryVideoContext.exitFullScreen()\n      }\n    } else {\n      if (tryVideoContext) {\n        tryVideoContext.requestFullScreen({ direction: 90 })\n      }\n    }\n  }\n\n  /**获取视频清晰度名称*/\n  const getQualityName = clarity => {\n    let quality_name = ''\n    switch (parseInt(clarity)) {\n      case 1:\n        quality_name = '流畅'\n        break\n      case 2:\n        quality_name = '标清'\n        break\n      case 3:\n        quality_name = '高清'\n        break\n      case 4:\n        quality_name = '超清'\n        break\n      case 5:\n        quality_name = '2k'\n        break\n      case 6:\n        quality_name = '4k'\n        break\n      case 7:\n        quality_name = '流畅'\n        break\n      case 8:\n        quality_name = '标清'\n        break\n      case 9:\n        quality_name = '高清'\n        break\n      case 10:\n        quality_name = '超清'\n        break\n      case 11:\n        quality_name = '2k'\n        break\n      case 12:\n        quality_name = '4k'\n        break\n      case 13:\n        quality_name = '原画'\n        break\n    }\n    return quality_name\n  }\n\n  /**设置新的视频码率，与当前视频码率对比，不一样即更换视频地址和取当前播放进度，更新store数据*/\n  const setQuality = item => {\n    if (videoLoading) return\n    controlToggle()\n    item = item || {}\n    let { src, canTouch, videoUrls, progress, isTask } = videoParams || {}\n    if (item.url !== src) {\n      let tempVideoParams = {\n        vid: item.video_id,\n        src: item.url,\n        canTouch,\n        videoUrls,\n        startFrom: tempCurrentTime,\n        progress,\n        isTask,\n      }\n      onChangeQuality = true\n      updateVideoParams(tempVideoParams)\n      setShowQuality(false)\n    } else {\n      setShowQuality(false)\n    }\n  }\n\n  let { src, videoUrls, canTouch, isTask } = videoParams || {}\n  return (\n    <Video\n      id=\"tryVideo\"\n      className={styles.video}\n      src={src}\n      enableProgressGesture={false}\n      enableProgressPesture={false}\n      showFullscreenBtn={false}\n      showPlayBtn={false}\n      showCenterPlayBtn={false}\n      showProgress={false}\n      controls={false}\n      autoplay={true}\n      onPlay={bindPlay}\n      onPause={bindPause}\n      onEnded={bindEnded}\n      onWaiting={bindWaiting}\n      onTimeUpdate={bindtimeupdate}\n      onFullscreenChange={bindfullscreenchange}\n      onLoadedmetadata={bindLoadedmetadata}\n      onProgress={bindProgressChange}\n      onError={bindVideoErrorCallback}\n      onClick={controlToggle}\n    >\n      {videoLoading ? (\n        <View className={styles.video_mask} onClick={e => e.stopPropagation()}>\n          <View className={styles.video_loading}>\n            <View className={styles.circle_line}>\n              <Text></Text>\n              <Text></Text>\n              <Text></Text>\n              <Text></Text>\n              <Text></Text>\n              <Text></Text>\n              <Text></Text>\n              <Text></Text>\n            </View>\n          </View>\n        </View>\n      ) : null}\n      {/*<view className={[styles.quality_content].join(' ')}>*/}\n      <view className={[styles.quality_content, showQuality ? '' : styles.hide].join(' ')}>\n        {videoUrls.map(item => {\n          let { id, clarity } = item || {}\n          clarity = Number(clarity || 0)\n          return (\n            <View\n              key={`video_quality_${id}`}\n              className={styles.quality_content_item}\n              onClick={() => {\n                setQuality(item)\n              }}\n            >\n              {getQualityName(clarity)}\n            </View>\n          )\n        })}\n      </view>\n\n      {showControl ? (\n        <View className={styles.video_controls} style={{ bottom: isFullScreen ? '30rpx' : '0' }}>\n          {!isFullScreen ? (\n            <View\n              className={playing ? styles.video_btn_play : styles.video_btn_pause}\n              onClick={togglePlay}\n            />\n          ) : (\n            <View\n              className={playing ? styles.video_btn_play : styles.video_btn_pause}\n              style={{ paddingLeft: '100rpx' }}\n              onClick={togglePlay}\n            />\n          )}\n\n          <View className={isFullScreen ? styles.video_time_full : styles.video_time}>\n            <View className={styles.video_time_item}>{timePlay.hour || '00'}</View>\n            <View className={styles.video_time_point}>:</View>\n            <View className={styles.video_time_item}> {timePlay.minite || '00'}</View>\n            <View className={styles.video_time_point}>:</View>\n            <View className={styles.video_time_item}>{timePlay.seconds || '00'}</View>\n          </View>\n\n          <Slider\n            className={styles.video_timebar_bg}\n            value={timeBarWidth}\n            color=\"#e9e9e9\"\n            selectedColor=\"#1aad19\"\n            showValue={false}\n            blockSize=\"12\"\n            leftIcon=\"cancel\"\n            rightIcon=\"success_no_circle\"\n            onChanging={sliderChanging}\n            onChange={sliderChangeEnd}\n            disabled={!canTouch}\n          />\n\n          <View className={isFullScreen ? styles.video_time_full : styles.video_time}>\n            <View className={styles.video_time_item}>{timeAll.hour || '00'}</View>\n            <View className={styles.video_time_point}>:</View>\n            <View className={styles.video_time_item}> {timeAll.minite || '00'}</View>\n            <View className={styles.video_time_point}>:</View>\n            <View className={styles.video_time_item}>{timeAll.seconds || '00'}</View>\n          </View>\n\n          {isFullScreen ? (\n            <View className={styles.video_btn_quality} onClick={toggleQuality}>\n              {qualityName}\n            </View>\n          ) : null}\n\n          {!isFullScreen ? (\n            <View\n              className={isFullScreen ? styles.video_btn_full_exit : styles.video_btn_full}\n              onClick={toggleFull}\n            />\n          ) : (\n            <View\n              className={isFullScreen ? styles.video_btn_full_exit : styles.video_btn_full}\n              style=\"padding-right:100rpx\"\n              onClick={toggleFull}\n            />\n          )}\n        </View>\n      ) : null}\n\n      {showTry ? (\n        <View className={styles.video_cover}>\n          <View className={styles.cover_txt}>试看已结束</View>\n          <View className={styles.cover_btns}>\n            {isFullScreen ? (\n              <View className={styles.cover_btn_1} onClick={bindExitFullScreen}>\n                退出全屏\n              </View>\n            ) : null}\n            <View className={styles.cover_btn_2} onClick={bindReplay}>\n              重新试看\n            </View>\n          </View>\n        </View>\n      ) : null}\n    </Video>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"index-module__video___XSU9A\",\"video_controls\":\"index-module__video_controls___3oavk\",\"video_btn_play\":\"index-module__video_btn_play___3cb7D\",\"video_btn_pause\":\"index-module__video_btn_pause___37LrJ\",\"video_time\":\"index-module__video_time___3h6KJ\",\"video_time_full\":\"index-module__video_time_full___3NRYq\",\"quality_content\":\"index-module__quality_content___2gCBb\",\"hide\":\"index-module__hide___M1EBp\",\"quality_content_item\":\"index-module__quality_content_item___1pYn7\",\"video_mask\":\"index-module__video_mask___3n37u\",\"video_loading\":\"index-module__video_loading___NUPc_\",\"circle_line\":\"index-module__circle_line___1kkkW\",\"circle\":\"index-module__circle___3qjS5\",\"slider_time\":\"index-module__slider_time___2giVN\",\"video_time_item\":\"index-module__video_time_item___SeO-a\",\"video_time_point\":\"index-module__video_time_point____uULL\",\"video_timebar_bg\":\"index-module__video_timebar_bg___3oqEO\",\"video_btn_quality\":\"index-module__video_btn_quality___2O0qm\",\"video_btn_full\":\"index-module__video_btn_full___EiBSe\",\"video_btn_full_exit\":\"index-module__video_btn_full_exit___2ucvo\",\"video_cover\":\"index-module__video_cover___fLutB\",\"cover_txt\":\"index-module__cover_txt___3ixcr\",\"cover_btns\":\"index-module__cover_btns___2T9Hs\",\"cover_btn_1\":\"index-module__cover_btn_1___1q6ED\",\"cover_btn_2\":\"index-module__cover_btn_2___PCcMx\"};","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"课程详情\",\"enableShareAppMessage\":true,\"enableShareTimeline\":true};\ncomponent.enableShareTimeline = true\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages/lesson/study/index', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"index-module__page___1aB7O\",\"color\":\"index-module__color___1am1i\"};","import React, { useState } from 'react'\nimport { observable, toJS } from 'mobx'\nimport Taro from '@tarojs/taro'\nimport { myDeleteData, myGetData, myPostData } from '../../../servers/http'\nimport api from '../api'\n\nclass studyStore {\n  // 课程id\n  @observable id = null\n  // 单元id\n  @observable unitid = null\n  // 用户id\n  @observable uid = null\n  // 视频id\n  @observable vid = null\n  // 课程详情\n  @observable info = {}\n  @observable listData = []\n\n  @observable testData = {}\n  @observable sel_test = true\n  @observable test_id = null\n  //所有的单元数据\n  @observable allUnits = []\n  //单元详情\n  @observable unitDetail = {}\n  //所有的video视频数据\n  @observable allVideo = []\n  @observable selItem = 1\n  //播放器指针\n  @observable videoPlayer = null\n  //视频的数据\n  @observable coverImage = ''\n  //视频的数据\n  @observable videoData = {}\n  //播放视频的地址\n  @observable videoUrl = ''\n  //视频所有清晰度\n  @observable videoUrls = []\n  //完成进度\n  @observable progress = 0\n  //视频总时长\n  @observable videoDuration = 0\n  //允许试看的时间\n  @observable trailerTime = 0\n  //是否允许快进\n  @observable canTouch = false\n  //是否允许请求\n  @observable canRequest = true\n  //是否在任务\n  @observable is_task = 0\n  //上次观看时长\n  @observable startFrom = 0\n  //确认在线间隔\n  @observable confirm_time = 0\n  //控制播放状态\n  @observable playing = true\n  //当天观看时长是否超标\n  @observable todayOver = false\n  //成功记录时间\n  @observable successTime = 0\n  //是否播放器出错\n  @observable show_problem = false\n  //视频所有数据\n  @observable videoParams = {\n    vid: this.vid,\n    src: this.videoUrl,\n    canTouch: this.canTouch,\n    videoUrls: this.videoUrls,\n    startFrom: this.startFrom,\n    progress: this.progress,\n    isTask: this.is_task,\n    successTime: this.successTime,\n    getVideoPlayer: this.getVideoPlayer,\n    onEndHandler: this.getNextVideoHasUnLearn,\n  }\n\n  //打开播放器出错界面\n  updateListData = params => {\n    let { vid, progress, progressTime } = params || {}\n    let tempListData = JSON.parse(JSON.stringify(this.listData))\n    tempListData.map(item => {\n      let { video } = item || {}\n      video.map(temp => {\n        if (Number(temp.id || 0) === Number(vid || 0)) {\n          temp.progress = progress\n          temp.progress_time = progressTime\n        }\n      })\n    })\n    this.listData = tempListData\n  }\n\n  //打开播放器出错界面\n  updateShowProblem = bool => {\n    this.show_problem = bool\n  }\n\n  //修改视频数据\n  updateVideoParams = params => {\n    let { vid, src, canTouch, videoUrls, progress, startFrom, isTask, successTime } = params || {}\n    this.vid = vid\n    this.videoUrl = src\n    this.canTouch = canTouch\n    this.videoUrls = videoUrls\n    this.progress = progress\n    this.startFrom = startFrom\n    this.is_task = isTask\n    this.successTime = successTime\n    let tempVideoParams = {\n      vid,\n      src,\n      canTouch,\n      videoUrls,\n      progress,\n      startFrom,\n      isTask,\n      successTime,\n      getVideoPlayer: this.getVideoPlayer,\n      onEndHandler: this.getNextVideoHasUnLearn,\n    }\n    this.videoParams = tempVideoParams\n  }\n\n  getVideoPlayer = player => {\n    this.videoPlayer = player\n  }\n\n  //修改视频数据\n  updateVideoParamsKey = (key, value) => {\n    if (key === 'isTask') {\n      this.is_task = value\n    } else if (key === 'src') {\n      this.videoUrl = value\n    } else {\n      this[key] = value\n    }\n    let tempVideoParams = {\n      vid: this.vid,\n      src: this.videoUrl,\n      canTouch: this.canTouch,\n      videoUrls: this.videoUrls,\n      progress: this.progress,\n      startFrom: this.startFrom,\n      isTask: this.is_task,\n      successTime: this.successTime,\n      getVideoPlayer: this.getVideoPlayer,\n      onEndHandler: this.getNextVideoHasUnLearn,\n    }\n    this.videoParams = tempVideoParams\n  }\n\n  cleanAll = () => {\n    // 课程详情\n    this.info = {}\n    this.listData = []\n    this.selItem = 1\n    //视频的数据\n    this.coverImage = ''\n    //视频的数据\n    this.videoData = {}\n    //播放视频的地址\n    this.videoUrl = ''\n    //播放视频的所有清晰度\n    this.videoUrls = []\n    //允许试看的时间\n    this.trailerTime = 0\n    //是否允许快进\n    this.canTouch = false\n    //是否允许请求\n    this.canRequest = true\n    //是否在任务\n    this.is_task = 0\n    //上次观看时长\n    this.startFrom = 0\n    //确认在线间隔\n    this.confirm_time = 0\n    this.videoParams = {\n      vid: this.vid,\n      src: this.videoUrl,\n      canTouch: this.canTouch,\n      videoUrls: this.videoUrls,\n      progress: this.progress,\n      startFrom: this.startFrom,\n      isTask: this.is_task,\n      successTime: this.successTime,\n      getVideoPlayer: this.getVideoPlayer,\n      onEndHandler: this.getNextVideoHasUnLearn,\n    }\n\n    this.testData = {}\n    this.sel_test = true\n    this.test_id = null\n  }\n\n  setVideoUrl = url => {\n    this.videoUrl = url\n  }\n  setTrailerTime = num => {\n    this.trailerTime = num\n  }\n  setStartFrom = num => {\n    this.startFrom = num\n  }\n  setCanTouch = bool => {\n    this.canTouch = bool\n  }\n  setConfirmTime = num => {\n    this.confirm_time = num\n  }\n\n  selSee = type => {\n    this.selItem = type\n  }\n\n  toggleFollow = () => {\n    if (!this.canRequest) return\n    this.canRequest = false\n    let { is_follow } = this.info\n    is_follow = is_follow || false\n    if (is_follow) {\n      myDeleteData(`${api.follows}/${this.id}`)\n        .then(({ status, data }) => {\n          this.canRequest = true\n          if (status !== 204) return\n          const temp = JSON.parse(JSON.stringify(this.info))\n          temp.is_follow = false\n          this.info = temp\n          Taro.eventCenter.trigger('toggleFollow', false)\n        })\n        .catch(() => {\n          this.canRequest = true\n        })\n    } else {\n      myPostData(api.follows, { follow_id: this.id })\n        .then(({ status, data }) => {\n          this.canRequest = true\n          if (status !== 201) return\n          const temp = JSON.parse(JSON.stringify(this.info))\n          temp.is_follow = true\n          this.info = temp\n          Taro.eventCenter.trigger('toggleFollow', true)\n        })\n        .catch(() => {\n          this.canRequest = true\n        })\n    }\n  }\n\n  /**获取课程详情*/\n  getLessonDetail = async id => {\n    this.id = id\n    myGetData(`${api.courses}/${id}`)\n      .then(({ status, data }) => {\n        if (status !== 200) return\n        this.info = data\n        const { is_task } = data || {}\n        this.is_task = Number(is_task || 0)\n\n        let siteData = Taro.getStorageSync('career_fe_site') || '{}'\n        siteData = JSON.parse(siteData) || {}\n        let { alias } = siteData\n        // if ( alias === 'bj' ) {\n        //   this.setTrailerTime(600)\n        //   return\n        // }\n        // if ( alias === 'jx' ){\n        //   this.setTrailerTime(180)\n        //   return\n        // }\n        this.setTrailerTime(600)\n      })\n      .catch(({ status, data }) => {})\n  }\n\n  /**判断当前视频之前是否有未学完单元**/\n  getNextVideoHasUnLearn = vid => {\n    // let that = this\n    // let cidIndex = 0\n    // this.allVideo.map((item, index) => {\n    //   if (item.id === vid) {\n    //     cidIndex = index\n    //   }\n    // })\n    // let tempVideoList = this.allVideo.filter((item, index) => index < cidIndex)\n    // let nextVideoList = this.allVideo.filter((item, index) => index > cidIndex)\n    // let allNextUnLearnVideoList = nextVideoList.filter(item => Number(item.progress || 0) !== 1)\n    // let nextUnLearnVideoList = nextVideoList.filter(item => Number(item.isFirstTask || 0) === 1)\n    // let unLearnVideo = tempVideoList.filter(item => Number(item.isFirstTask || 0) === 1)\n    // if (unLearnVideo.length > 0) {\n    //   if (this.videoPlayer) {\n    //     this.videoPlayer.pause()\n    //   }\n    //   Taro.showModal({\n    //     title: '提示',\n    //     content: '您前面有章节还未学完，请按顺序进行学习。',\n    //     confirmColor: '#2a65de',\n    //     confirmText: '按顺序学',\n    //     success: function (res) {\n    //       if (res.confirm) {\n    //         if (unLearnVideo.length > 0) {\n    //           that.getLessonVideoUrl(unLearnVideo[0].id, () => {})\n    //         }\n    //       } else if (res.cancel) {\n    //         if (nextUnLearnVideoList.length > 0) {\n    //           that.getLessonVideoUrl(nextUnLearnVideoList[0].id, () => {})\n    //         } else {\n    //           if (allNextUnLearnVideoList.length > 0) {\n    //             that.getLessonVideoUrl(allNextUnLearnVideoList[0].id, () => {})\n    //           } else {\n    //             if (nextVideoList.length > 0) {\n    //               that.getLessonVideoUrl(nextVideoList[0].id, () => {})\n    //             }\n    //           }\n    //         }\n    //       }\n    //     },\n    //   })\n    // } else {\n    //   if (nextUnLearnVideoList.length > 0) {\n    //     this.getLessonVideoUrl(nextUnLearnVideoList[0].id, () => {})\n    //   } else {\n    //     if (allNextUnLearnVideoList.length > 0) {\n    //       this.getLessonVideoUrl(allNextUnLearnVideoList[0].id, () => {})\n    //     } else {\n    //       if (nextVideoList.length > 0) {\n    //         this.getLessonVideoUrl(nextVideoList[0].id, () => {})\n    //       }\n    //     }\n    //   }\n    // }\n  }\n\n  /**获取课程目录*/\n  getLessonChapters = async (id, unitid) => {\n    this.id = id\n    myGetData(`${api.newCourseChapters}`, { course_id: id })\n      .then(({ status, data }) => {\n        if (Number(status || 0) > 199 && Number(status || 0) < 300) {\n          let { course, test } = data || {}\n          course = course || []\n          test = test || {}\n          let tempAllUnit = []\n          course.map((a, index) => {\n            a.active = true\n            let { sections, units } = a || {}\n            sections = sections || []\n            units = units || []\n            sections.map(s => {\n              let { units } = s || {}\n              units.map(u => {\n                tempAllUnit.push(u)\n                u.active = false\n              })\n            })\n            units.map(u => {\n              tempAllUnit.push(u)\n              u.active = false\n            })\n          })\n\n          tempAllUnit.every(item => {\n            if (Number(item.type || 0) === 1) {\n              item.isFirstMovie = true\n              return false\n            } else {\n              return true\n            }\n          })\n          this.allUnits = tempAllUnit\n          console.log(course)\n          this.listData = course\n          this.testData = test\n          this.getUnitDetail(unitid)\n        }\n      })\n      .catch(({ status, data }) => {})\n  }\n\n  //打开考试章节\n  toggleSelTest = () => {\n    this.sel_test = !this.sel_test\n  }\n  //前去考试\n  goToTest = () => {\n    let { id } = this.testData || {}\n    this.test_id = id\n    Taro.showToast({\n      title: '您目前只能观看试看视频',\n      icon: 'none',\n      duration: 3000,\n    })\n  }\n\n  /**单元详情*/\n  getUnitDetail = unitId => {\n    this.unitid = unitId\n    myGetData(`${api.unitDetail}/${unitId}`)\n      .then(({ status, data }) => {\n        if (Number(status || 0) > 199 && Number(status || 0) < 300) {\n          data = data || {}\n          this.unitDetail = data\n\n          let { type, video, total_time } = data\n          type = Number(type || 0)\n          total_time = Number(total_time || 0)\n          this.videoDuration = total_time\n          video = video || {}\n          let { urls } = video\n          urls = urls || []\n          let videoUrl = ''\n          if (urls.length > 0) {\n            videoUrl = urls[0].url\n          }\n          let tempVideoParams = {\n            src: videoUrl,\n            canTouch: false,\n            videoUrls: urls,\n            progress: 0,\n            startFrom: 0,\n            isTask: 0,\n            successTime: 0,\n          }\n          this.videoParams = tempVideoParams\n        }\n      })\n      .catch(({ status, data }) => {})\n  }\n\n  /**设置用户id*/\n  setUid = id => {\n    this.uid = id\n  }\n\n  /**显示隐藏章节视频*/\n  toggleUnit = data => {\n    let tempList = JSON.parse(JSON.stringify(this.listData))\n    tempList.map(item => {\n      if (item.id.toString() === data.id.toString()) {\n        item.active = !item.active\n      }\n    })\n    this.listData = tempList\n  }\n\n  /**\n   * 图片资源失败时更换为默认图\n   * @param index 索引\n   * @param defaultImage 默认图\n   * */\n  fixErrorImage = defaultImage => {\n    let tempInfo = JSON.parse(JSON.stringify(this.info))\n    if (tempInfo) {\n      tempInfo.image = defaultImage\n    }\n    this.info = tempInfo\n  }\n\n  /**\n   * 图片资源失败时更换为默认图\n   * @param index 索引\n   * @param defaultImage 默认图\n   * */\n  fixErrorAvatar = defaultImage => {\n    let tempInfo = JSON.parse(JSON.stringify(this.info))\n    if (tempInfo) {\n      tempInfo.source = tempInfo.source || {}\n      tempInfo.source.avatar = defaultImage\n    }\n    this.info = tempInfo\n  }\n\n  updateTodayOver = () => {\n    this.todayOver = true\n  }\n\n  watchMovie = e => {\n    e.stopPropagation()\n    Taro.showToast({\n      title: '您目前只能观看试看视频',\n      icon: 'none',\n      duration: 3000,\n    })\n  }\n}\n\nexport default new studyStore()\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAEA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AAFA;AATA;AACA;AAiBA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAahBA;AAyBA;AAAA;AA1BA;AAFA;AAZA;AA8CA;AAtDA;AAyDA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AARA;AAUA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAHA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAdA;AAqBA;AAAA;AAtBA;AAFA;AAVA;AAwCA;AAzHA;AA4HA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AADA;AAAA;AADA;AADA;AADA;AAFA;AAPA;AAZA;AAtIA;AAhBA;AAgMA;AACA;AACA;AACA;;;;;;;;;;;;AC1UA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAEA;AACA;AACA;AADA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAvCA;AACA;AAwCA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AADA;AAgBA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAfA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAMA;AACA;AACA;AAHA;AAxDA;AAkEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AANA;AAFA;AA7HA;AA6IA;;;;;;;;;;;;ACzeA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAavBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAydA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AACA;;;;;AAAA;;AAEA;;;;;AAAA;;AACA;;;;;AAAA;;AACA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AACA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;AAsaA;;;;A","sourceRoot":""}