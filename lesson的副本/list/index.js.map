{"version":3,"file":"pages/lesson/list/index.js","sources":["webpack:///._src_pages_lesson_list_index.jsx","webpack:///._src_components_Hunan_Lesson_List_index.jsx","webpack:///._src_components_Hunan_Lesson_List_index.module.less","webpack:///./src/pages/lesson/list/index.jsx?5372","webpack:///._src_pages_lesson_list_index.module.less","webpack:///._src_pages_lesson_list_listStore.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Image, View, Text, ScrollView, Picker } from '@tarojs/components'\nimport { toJS } from 'mobx'\nimport { useObserver } from 'mobx-react'\nimport styles from './index.module.less'\nimport Hunan from '@/components/Hunan/Lesson/List'\nimport listStore from './listStore'\n\nconst List = () => {\n  useEffect(() => {\n    let { initAll } = toJS(listStore)\n    initAll = initAll || new Function()\n    return initAll\n  }, [])\n\n  return useObserver(() => {\n    return (\n      <View className={styles.page}>\n        <Hunan {...toJS(listStore)} />\n      </View>\n    )\n  })\n}\n\nexport default List\n","import React, { useEffect } from 'react'\nimport { Image, View, Text, ScrollView, Input } from '@tarojs/components'\nimport { useObserver } from 'mobx-react'\nimport styles from './index.module.less'\nimport { useRouter, useShareAppMessage, useShareTimeline } from '@tarojs/taro'\nimport { uploadImage } from '../../../../servers/http'\nimport useStore from '../../../../util/useStore'\nimport EmptyList from '../../../../components/Hunan/EmptyList'\nimport store from '../../../../pages/homeSearch/store'\nimport getCurrentUrl from '../../../../util/getCurrentUrl'\n\nconst List = props => {\n  const router = useRouter()\n  let { params } = router || {}\n  let { id, name } = params || {}\n\n  const { store } = useStore()\n  let { globalStore } = store || {}\n  let { defaultListImage, defaultLogo } = globalStore || {}\n\n  useEffect(() => {\n    let { getCateList, getSourceList, cleanAll } = props || {}\n    getCateList = getCateList || new Function()\n    getSourceList = getSourceList || new Function()\n    id = id || null\n    name = decodeURIComponent(decodeURIComponent(name || ''))\n    getCateList(id, name)\n    getSourceList()\n    return () => {\n      cleanAll()\n    }\n  }, [])\n\n  let shareObj = {\n    title: '企业好课在线',\n    path: getCurrentUrl(),\n  }\n\n  useShareAppMessage(res => {\n    return shareObj\n  })\n  useShareTimeline(res => {\n    return shareObj\n  })\n\n  return useObserver(() => {\n    let {\n      searchStr,\n      searchInputChange,\n      searchInputEnter,\n\n      sourceName,\n      selStr,\n      selList,\n      selCid,\n      selSource,\n      toggleCover,\n      toggleSource,\n      showSource,\n      showCover,\n      toDetail,\n      cateList,\n      sourceList,\n      listData,\n      initList,\n      getList,\n      fixErrorImage,\n      fixErrorAvatar,\n      refresh,\n      loading,\n      hasmore,\n    } = props\n\n    searchStr = searchStr || ''\n    searchInputChange = searchInputChange || new Function()\n    searchInputEnter = searchInputEnter || new Function()\n\n    toDetail = toDetail || new Function()\n\n    selStr = selStr || []\n    selList = selList || []\n    selCid = selCid || new Function()\n    selSource = selSource || new Function()\n    showCover = showCover || false\n    showSource = showSource || false\n    toggleCover = toggleCover || new Function()\n    sourceList = sourceList || []\n    listData = listData || []\n    initList = initList || new Function()\n    getList = getList || new Function()\n    fixErrorImage = fixErrorImage || new Function()\n    fixErrorAvatar = fixErrorAvatar || new Function()\n    refresh = refresh || false\n    loading = loading || false\n    hasmore = hasmore || false\n\n    /**\n     * 生成筛选dom\n     * */\n    const getSelCon = () => {\n      let tempSelList = JSON.parse(JSON.stringify(selList))\n      tempSelList = tempSelList.filter(a => a.length > 0)\n      let level = tempSelList.length\n      return tempSelList.map((a, index) => {\n        if (level === 1) {\n          return (\n            <View className={[styles.sel_con, styles.w100].join(' ')}>\n              {a.map(temp => {\n                const { id, name, pid, active } = temp\n                return (\n                  <View\n                    key={`${id}_${name}_${pid}`}\n                    className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n                    onClick={e => {\n                      selCid(e, id, index)\n                    }}\n                  >\n                    {name}\n                  </View>\n                )\n              })}\n            </View>\n          )\n        }\n\n        if (level === 2) {\n          return (\n            <View className={[styles.sel_con, styles.w50].join(' ')}>\n              {a.map(temp => {\n                const { id, name, pid, active } = temp\n                return (\n                  <View\n                    key={`${id}_${name}_${pid}`}\n                    className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n                    onClick={e => {\n                      selCid(e, id, index)\n                    }}\n                  >\n                    {name}\n                  </View>\n                )\n              })}\n            </View>\n          )\n        }\n\n        if (level === 3) {\n          if (index < 2) {\n            return (\n              <View className={[styles.sel_con, styles.w25].join(' ')}>\n                {a.map(temp => {\n                  const { id, name, pid, active } = temp\n                  return (\n                    <View\n                      key={`${id}_${name}_${pid}`}\n                      className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n                      onClick={e => {\n                        selCid(e, id, index)\n                      }}\n                    >\n                      {name}\n                    </View>\n                  )\n                })}\n              </View>\n            )\n          } else {\n            return (\n              <View className={[styles.sel_con, styles.w50].join(' ')}>\n                {a.map(temp => {\n                  const { id, name, pid, active } = temp\n                  return (\n                    <View\n                      key={`${id}_${name}_${pid}`}\n                      className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n                      onClick={e => {\n                        selCid(e, id, index)\n                      }}\n                    >\n                      {name}\n                    </View>\n                  )\n                })}\n              </View>\n            )\n          }\n        }\n\n        if (level === 4) {\n          if (index < 3) {\n            return (\n              <View className={[styles.sel_con, styles.w20].join(' ')}>\n                {a.map(temp => {\n                  const { id, name, pid, active } = temp\n                  return (\n                    <View\n                      key={`${id}_${name}_${pid}`}\n                      className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n                      onClick={e => {\n                        selCid(e, id, index)\n                      }}\n                    >\n                      {name}\n                    </View>\n                  )\n                })}\n              </View>\n            )\n          } else {\n            return (\n              <View className={[styles.sel_con, styles.w40].join(' ')}>\n                {a.map(temp => {\n                  const { id, name, pid, active } = temp\n                  return (\n                    <View\n                      key={`${id}_${name}_${pid}`}\n                      className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n                      onClick={e => {\n                        selCid(e, id, index)\n                      }}\n                    >\n                      {name}\n                    </View>\n                  )\n                })}\n              </View>\n            )\n          }\n        }\n      })\n    }\n    /**\n     * 生成来源筛选dom\n     * */\n    const getSourceCon = () => {\n      let tempSourceList = JSON.parse(JSON.stringify(sourceList))\n      return tempSourceList.map(temp => {\n        let { bid, seller, active } = temp || {}\n        const { company_alias_name } = seller || {}\n        return (\n          <View\n            key={`${bid}_${company_alias_name}`}\n            className={[styles.sel_con_item, active ? styles.active : ''].join(' ')}\n            onClick={e => {\n              selSource(e, bid)\n            }}\n          >\n            {company_alias_name}\n          </View>\n        )\n      })\n    }\n\n    return (\n      <View className={styles.page}>\n        <View className={styles.search_box}>\n          <View className={styles.search_icon} />\n          <Input\n            value={searchStr}\n            placeholder=\"搜索要查找的课程\"\n            confirm-type=\"search\"\n            className={styles.search_Input}\n            onInput={searchInputChange}\n            onConfirm={searchInputEnter}\n          />\n        </View>\n        <View className={styles.select_con_list}>\n          <View className={styles.select_con} onClick={toggleCover}>\n            {selStr.length === 0 ? <View className={styles.select_item}>培训分类</View> : null}\n            {selStr.map((item, index) => {\n              if (index === selStr.length - 1) {\n                return <View className={styles.select_item}>{item.name}</View>\n              } else {\n                return (\n                  <View className={styles.select_item}>\n                    {item.name}\n                    <View className={styles.select_split}>/</View>\n                  </View>\n                )\n              }\n            })}\n          </View>\n\n          <View className={styles.select_con} onClick={toggleSource}>\n            <View className={styles.select_item}>{sourceName}</View>\n          </View>\n        </View>\n        <ScrollView\n          className={styles.scroll_view}\n          enhanced={true}\n          scrollY\n          scrollWithAnimation\n          scrollTop={0}\n          refresherEnabled={true}\n          refresherTriggered={refresh}\n          onRefresherRefresh={() => {\n            initList(true)\n          }}\n          onScrollToLower={getList}\n        >\n          {listData.map((item, index) => {\n            let { id, cid, title, image, description, price, cost_price, bid, source } = item\n            source = source || {}\n            let { seller } = source\n            seller = seller || {}\n            image = image || defaultListImage\n            source.avatar = source.avatar || defaultLogo\n            return (\n              <View\n                className={styles.list_item}\n                onClick={e => {\n                  toDetail(e, id)\n                }}\n              >\n                <Image\n                  lazyLoad={true}\n                  className={styles.image}\n                  src={image}\n                  mode={'aspectFill'}\n                  lazyLoad={true}\n                  onError={e => {\n                    fixErrorImage(index, defaultListImage)\n                  }}\n                />\n                <View className={styles.content}>\n                  <Text className={styles.name}>{title}</Text>\n                  {/*<Text className={styles.des}>{description}</Text>*/}\n                  <View className={styles.info_content}>\n                    {/*<View className={styles.info}>*/}\n                    {/*  <Text className={styles.free}>*/}\n                    {/*    {Number(price || 0) === 0 ? '免费' : price}*/}\n                    {/*  </Text>*/}\n                    {/*  <Text className={styles.money}>￥{cost_price}</Text>*/}\n                    {/*</View>*/}\n                    <View className={styles.from}>\n                      <Image\n                        lazyLoad={true}\n                        className={styles.icon}\n                        src={source.avatar}\n                        mode={'aspectFill'}\n                        lazyLoad={true}\n                        onError={e => {\n                          fixErrorAvatar(index, defaultLogo)\n                        }}\n                      />\n                      <Text className={styles.txt}>{seller.company_alias_name}</Text>\n                      {/*<Text className={styles.txt}>{seller.platform_name}</Text>*/}\n                    </View>\n                  </View>\n                </View>\n              </View>\n            )\n          })}\n          <view className={styles.list_bottom}>\n            {loading ? <view className={styles.list_bottom_loading}>加载中...</view> : null}\n            {!loading && !hasmore && listData.length !== 0 ? <view>没有更多了</view> : null}\n            {!loading && !hasmore && listData.length === 0 ? <EmptyList /> : null}\n            {/*<view>数据加载失败,请重试</view>*/}\n          </view>\n        </ScrollView>\n\n        <View\n          className={styles.sel_mask}\n          style={showCover ? { display: 'block' } : { display: 'none' }}\n          onClick={e => {\n            toggleCover()\n          }}\n        >\n          <View className={styles.sel_con_list}>{getSelCon()}</View>\n        </View>\n\n        <View\n          className={styles.sel_mask}\n          style={showSource ? { display: 'block' } : { display: 'none' }}\n          onClick={e => {\n            toggleSource()\n          }}\n        >\n          <View className={styles.sel_con_list}>\n            <View className={[styles.sel_con, styles.w100].join(' ')}>{getSourceCon()}</View>\n          </View>\n        </View>\n      </View>\n    )\n  })\n}\n\nexport default List\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"index-module__page___3Xjqj\",\"select_con_list\":\"index-module__select_con_list___1tDYN\",\"select_con\":\"index-module__select_con___1g6F9\",\"select_item\":\"index-module__select_item___1eeL_\",\"select_split\":\"index-module__select_split___2PS7h\",\"sel_mask\":\"index-module__sel_mask___FJzYm\",\"sel_con\":\"index-module__sel_con___1G8iG\",\"sel_con_item\":\"index-module__sel_con_item___21eFa\",\"active\":\"index-module__active___2kipo\",\"sel_con_list\":\"index-module__sel_con_list___3mOOc\",\"w100\":\"index-module__w100___z1g7K\",\"w50\":\"index-module__w50___1kXe0\",\"w40\":\"index-module__w40___3GiGL\",\"w25\":\"index-module__w25___3V_PD\",\"w20\":\"index-module__w20___3eIGu\",\"scroll_view\":\"index-module__scroll_view___1AKfI\",\"list_bottom\":\"index-module__list_bottom___2pXfD\",\"list_bottom_loading\":\"index-module__list_bottom_loading___3vWUk\",\"list_item\":\"index-module__list_item___AZVeo\",\"image\":\"index-module__image___UpsVm\",\"content\":\"index-module__content___P5eCP\",\"name\":\"index-module__name___3IIaQ\",\"des\":\"index-module__des___2J6d4\",\"info_content\":\"index-module__info_content___2_l_1\",\"info\":\"index-module__info___3hFYo\",\"free\":\"index-module__free___3pWGg\",\"money\":\"index-module__money___1CY4Z\",\"from\":\"index-module__from___1JgLy\",\"icon\":\"index-module__icon___wX7AQ\",\"txt\":\"index-module__txt___1opRl\",\"search_box\":\"index-module__search_box___2zeKr\",\"search_icon\":\"index-module__search_icon___1o7Cd\",\"search_Input\":\"index-module__search_Input___1iyaI\"};","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"企业好课在线\",\"disableScroll\":true,\"enableShareAppMessage\":true,\"enableShareTimeline\":true};\ncomponent.enableShareTimeline = true\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages/lesson/list/index', {root:{cn:[]}}, config || {}))\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"index-module__page___3Ca_i\"};","import { observable, action } from 'mobx'\nimport { toJS } from 'mobx'\nimport Taro from '@tarojs/taro'\nimport { myGetData } from '../../../servers/http'\nimport api from '../api'\n\nclass listStore {\n  //搜索的课程名\n  @observable searchStr = ''\n  //选择的课程分类id\n  @observable cid = null\n  //选择的课程来源id\n  @observable bid = null\n  //当前课程列表页码\n  @observable current = 1\n  //课程总条目数\n  @observable total = 0\n  //是否还要更多数据\n  @observable hasmore = true\n  //是否展示下拉刷新状态\n  @observable refresh = false\n  //请求中\n  @observable loading = false\n  //课程列表\n  @observable listData = []\n  //分类数据\n  @observable cateList = []\n  //分类层级\n  @observable levelMax = 0\n  //来源列表\n  @observable sourceList = []\n  //筛选的处理后数据\n  @observable selList = [[], [], [], []]\n  //筛选的有效数组\n  @observable selStr = []\n  //筛选的来源名称\n  @observable sourceName = '课程平台'\n  //控制筛选遮罩\n  @observable showCover = false\n  //控制来源筛选遮罩\n  @observable showSource = false\n\n  cleanAll = () => {\n    //搜索的课程名\n    this.searchStr = ''\n    //选择的课程分类id\n    this.cid = null\n    //选择的课程来源id\n    this.bid = null\n    //当前课程列表页码\n    this.current = 1\n    //课程总条目数\n    this.total = 0\n    //是否还要更多数据\n    this.hasmore = true\n    //是否展示下拉刷新状态\n    this.refresh = false\n    //请求中\n    this.loading = false\n    //课程列表\n    this.listData = []\n    //分类数据\n    this.cateList = []\n    //来源列表\n    this.sourceList = []\n    //筛选的处理后数据\n    this.selList = [[], [], [], []]\n    //筛选的有效数组\n    this.selStr = []\n    //筛选的来源名称\n    this.sourceName = '课程平台'\n    //控制筛选遮罩\n    this.showCover = false\n    //控制来源筛选遮罩\n    this.showSource = false\n  }\n\n  //搜索框值监听\n  searchInputChange = e => {\n    const { detail } = e\n    this.searchStr = detail.value || ''\n  }\n\n  //搜索触发\n  searchInputEnter = e => {\n    this.initList()\n  }\n\n  /**\n   * 展示或隐藏筛选遮罩\n   * */\n  toggleCover = () => {\n    this.showSource = false\n    this.showCover = !this.showCover\n  }\n  /**\n   * 展示或隐藏筛选遮罩\n   * */\n  toggleSource = () => {\n    this.showCover = false\n    this.showSource = !this.showSource\n  }\n\n  /**\n   * 获取分类数据\n   * */\n  getCateList = async (id, name) => {\n    this.searchStr = name\n    myGetData(api.courseCategories)\n      .then(({ status, data }) => {\n        if (status !== 200) return\n        data = data || []\n        data.map(a => (a.active = false))\n        const unique = new Map()\n        let allItemList = data.filter(a => !unique.has(a.pid) && unique.set(a.pid, 1))\n        allItemList.map(a => {\n          let obj = {\n            id: `all_${a.pid}`,\n            level: Number(a.level || 0),\n            name: '全部',\n            pid: a.pid,\n            active: false,\n          }\n          data = [obj].concat(data)\n        })\n        this.cateList = data\n        this.levelMax = 0\n        data.map(a => {\n          if (Number(a.level || 0) > this.levelMax) {\n            this.levelMax = Number(a.level || 0)\n          }\n        })\n        console.log(this.levelMax)\n        if (id) {\n          this.selCid(null, id, null)\n        } else {\n          this.selCid(null, 'all_0', null)\n        }\n      })\n      .catch(() => {})\n  }\n\n  /**\n   * 获取分类数据\n   * */\n  getSourceList = async () => {\n    myGetData(api.courseSource)\n      .then(({ status, data }) => {\n        if (Number(status || 0) > 199 && Number(status || 0) < 300) {\n          data = data || []\n          let obj = {\n            bid: `all_source`,\n            seller: {\n              platform_name: '全部',\n            },\n            active: true,\n          }\n          data = [obj].concat(data)\n          this.sourceList = data\n        }\n      })\n      .catch(() => {})\n  }\n\n  /**生成筛选数据**/\n  getSelList = cid => {\n    this.cateList.map(a => (a.active = false))\n    let mySelList = new Array(4)\n\n    let tempList = JSON.parse(JSON.stringify(this.cateList))\n    const lastRowItems = tempList.filter(a => a.pid.toString() === cid.toString())\n    lastRowItems.length > 0 ? (lastRowItems[0].active = true) : ''\n\n    let currentRowPid = ''\n    tempList = JSON.parse(JSON.stringify(this.cateList))\n    tempList.map(a => {\n      if (a.id.toString() === cid.toString()) {\n        currentRowPid = a.pid\n        a.active = true\n      }\n    })\n    const currentRowItems = tempList.filter(a => a.pid.toString() === currentRowPid.toString())\n\n    if (currentRowPid.toString() === 0) {\n      mySelList = [currentRowItems, lastRowItems].filter(a => a.length > 0)\n      this.selList = mySelList\n      this.getSelStr(mySelList)\n      return\n    } else {\n      let beforeRowPid = ''\n      tempList = JSON.parse(JSON.stringify(this.cateList))\n      tempList.map(a => {\n        if (a.id.toString() === currentRowPid.toString()) {\n          beforeRowPid = a.pid\n          a.active = true\n        }\n      })\n      const beforeRowItems = tempList.filter(a => a.pid.toString() === beforeRowPid.toString())\n\n      if (beforeRowPid.toString() === 0) {\n        mySelList = [beforeRowItems, currentRowItems, lastRowItems].filter(a => a.length > 0)\n        this.selList = mySelList\n        this.getSelStr(mySelList)\n        return\n      } else {\n        let secondRowPid = ''\n        tempList = JSON.parse(JSON.stringify(this.cateList))\n        tempList.map(a => {\n          if (a.id.toString() === beforeRowPid.toString()) {\n            secondRowPid = a.pid\n            a.active = true\n          }\n        })\n        const secondRowItems = tempList.filter(a => a.pid.toString() === secondRowPid.toString())\n\n        if (secondRowPid.toString() === 0) {\n          mySelList = [secondRowItems, beforeRowItems, currentRowItems, lastRowItems].filter(\n            a => a.length > 0\n          )\n          this.selList = mySelList\n          this.getSelStr(mySelList)\n          return\n        } else {\n          let firstRowPid = ''\n          tempList = JSON.parse(JSON.stringify(this.cateList))\n          tempList.map(a => {\n            if (a.id.toString() === secondRowPid.toString()) {\n              firstRowPid = a.pid\n              a.active = true\n            }\n          })\n          const firstRowItems = tempList.filter(a => a.pid.toString() === firstRowPid.toString())\n          mySelList = [\n            firstRowItems,\n            secondRowItems,\n            beforeRowItems,\n            currentRowItems,\n            lastRowItems,\n          ].filter(a => a.length > 0)\n          this.selList = mySelList\n          this.getSelStr(mySelList)\n        }\n      }\n    }\n  }\n\n  /**筛选数据的文本**/\n  getSelStr = arr => {\n    let str = []\n    arr.map(a => {\n      a.map(aa => {\n        if (aa.active && aa.name !== '全部') {\n          str.push(aa)\n        }\n      })\n    })\n    // str.length > 2 ? (str = str.slice(str.length - 2, str.length)) : ''\n    this.selStr = str\n  }\n\n  /**筛选数据**/\n  selCid = (e, cid, selIndex) => {\n    console.log(selIndex)\n    if (e) {\n      e.stopPropagation()\n    }\n    this.getSelList(cid)\n    if (cid.includes('all')) {\n      this.cid = cid.substr(cid.indexOf('_') + 1, cid.length)\n      this.showCover = false\n      this.initList()\n    } else {\n      this.cid = cid\n      if (selIndex && selIndex > this.levelMax - 2) {\n        this.showCover = false\n      }\n      this.initList()\n    }\n  }\n\n  /**筛选数据**/\n  selSource = (e, bid) => {\n    if (e) {\n      e.stopPropagation()\n    }\n    let tempSourceList = JSON.parse(JSON.stringify(this.sourceList))\n    tempSourceList.map(item => {\n      let { seller } = item || {}\n      let { company_alias_name } = seller || {}\n      if (item.bid === bid) {\n        item.active = true\n        this.sourceName = company_alias_name\n      } else {\n        item.active = false\n      }\n    })\n    this.sourceList = tempSourceList\n    this.bid = bid\n    if (bid === 'all_source') {\n      this.sourceName = '课程平台'\n      this.bid = null\n    }\n    this.initList()\n  }\n\n  /**\n   * 获取列表数据\n   * */\n  getList = async () => {\n    if (!this.hasmore || this.loading) return\n    let param = { page: this.current, 'per-page': 15, title: this.searchStr.trim() }\n    if (this.cid) {\n      param = { cid: this.cid, ...param }\n    }\n    if (this.bid) {\n      param = { bid: this.bid, ...param }\n    }\n    this.loading = true\n    myGetData(api.courses, param)\n      .then(({ status, headers, data }) => {\n        headers = headers || {}\n        data = data || []\n        this.loading = false\n        this.refresh = false\n        if (status !== 200) return\n        let oldList = JSON.parse(JSON.stringify(toJS(this.listData))) || []\n        this.total = Number(headers['X-Pagination-Total-Count'])\n        this.current = Number(headers['X-Pagination-Current-Page'])\n        oldList.map(a => {\n          data.map((b, index) => {\n            if (Number(a.id || 0) === Number(b.id || 0)) {\n              a = b\n              data.splice(index, 1)\n            }\n          })\n        })\n        if (Number(this.total || 0) > Number(oldList.length + data.length)) {\n          this.current = this.current + 1\n        } else if (Number(this.total || 0) === Number(oldList.length + data.length)) {\n          this.hasmore = false\n        } else {\n          this.hasmore = false\n        }\n        oldList = oldList.concat(data)\n        this.listData = oldList\n      })\n      .catch(() => {\n        this.loading = false\n        this.refresh = false\n      })\n  }\n\n  /**\n   * 刷新列表\n   * */\n  initList = async isRefresh => {\n    this.current = 1\n    this.total = 0\n    this.hasmore = true\n    if (isRefresh) {\n      this.refresh = true\n    }\n    this.listData = []\n    this.getList()\n  }\n\n  /**\n   * 重置页面\n   * */\n  initAll = async () => {\n    //搜索的课程名\n    this.searchStr = ''\n    //选择的课程分类id\n    this.cid = null\n    //当前课程列表页码\n    this.current = 1\n    //课程总条目数\n    this.total = 0\n    //是否还要更多数据\n    this.hasmore = true\n    //是否展示下拉刷新状态\n    this.refresh = false\n    //请求中\n    this.loading = false\n    //课程列表\n    this.listData = []\n    //分类数据\n    this.cateList = []\n    //筛选的处理后数据\n    this.selList = [[], [], [], []]\n    //筛选的有效数组\n    this.selStr = []\n    //控制筛选遮罩\n    this.showCover = false\n  }\n\n  /**\n   * 图片资源失败时更换为默认图\n   * @param index 索引\n   * @param defaultImage 默认图\n   * */\n  fixErrorImage = (index, defaultImage) => {\n    let tempList = JSON.parse(JSON.stringify(this.listData))\n    tempList[index] = tempList[index] || {}\n    if (tempList[index]) {\n      tempList[index].image = defaultImage\n    }\n    this.listData = tempList\n  }\n\n  /**\n   * 图片资源失败时更换为默认图\n   * @param index 索引\n   * @param defaultImage 默认图\n   * */\n  fixErrorAvatar = (index, defaultImage) => {\n    let tempList = JSON.parse(JSON.stringify(this.listData))\n    tempList[index] = tempList[index] || {}\n    tempList[index].source = tempList[index].source || {}\n    if (tempList[index]) {\n      tempList[index].source.avatar = defaultImage\n    }\n    this.listData = tempList\n  }\n\n  toDetail = (e, id) => {\n    e.stopPropagation()\n    Taro.navigateTo({\n      url: `/pages/lesson/detail/index?id=${id}`,\n    })\n  }\n}\nexport default new listStore()\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAFA;AAPA;AACA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAdA;AAiBA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAdA;AAiBA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AALA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAFA;AAKA;AACA;AAbA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAjBA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AAAA;AAAA;AAXA;AAPA;AAHA;AAhBA;AA4CA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AAlEA;AA2EA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAPA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AADA;AAPA;AArHA;AAkIA;AACA;AACA;AACA;;;;;;;;;;;;ACnYA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAsCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AA8CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA+BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAtaA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;AAEA;;;;;AAAA;;;AAwYA;;;;A","sourceRoot":""}